#include <FastLED.h>

// Author: Arthur (Damon) Mills
// Last Update: 3/24/2019
// Released for public use under GPL 2.0 License
// https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html

// Description: Causes WS2812B LEDs on Adafruit NeoPixel Ring-12 to illuminate.
// Accepts a switch button to change colors in a cycle, with the default value being off.

// Requires the FastLED library (Sketch -> Include Library -> Manage Libraries)
// Change number of LEDs with the NUM_LEDS variable
// Change the Ardunio PIN to control the LEDs with the LED_PIN variable
// Color is set using CRGB(Red, Green, Blue) command in main program

// sample RGB color values 
// white  (255,255,255)
// red    (255,0,0)
// blue   (0,0,255)
// yellow (255,255,0)
// purple (128,0,128)

#define LED_PIN   0     // PIN used on Arduino board LED control
#define SWITCH_PIN   1  // PIN used on Arduino board for switch
#define NUM_LEDS   12   // number of LEDs - constant

CRGB leds[NUM_LEDS];

// initial values for brightness, fade increment/decrement rate, and nuymber of LEDs

int brightness = 0;           // brightness value of the LEDs 0 (off) - 255 (max) 
int ledCount = NUM_LEDS;      // total number of LEDs controlled

// initial values for button state

int buttonState;              // variable to hold the button state
int buttonPresses = 1;        // how many times the button has been pressed
int checkValue = 1;           // variable to use as a check in LED RGB value set case statement

// initial RGB values for LEDs

int redValue = 0;             // red value for LEDs (CRGB)
int greenValue = 0;           // green value for LEDs (CRGB)
int blueValue = 0;            // blue value for LEDs (CRGB)

void setup() {
  FastLED.addLeds<WS2812, LED_PIN, GRB>(leds, NUM_LEDS);  // FastLED library call to program WS2812 LEDs
  pinMode(SWITCH_PIN, INPUT);    // sets the switch pin as an input
}

void loop() {

  // reads the button press status
  buttonState = digitalRead(SWITCH_PIN);
    
  if (buttonState == HIGH) {
    // incriment value of buttonPress integer if button is pressed
    buttonPresses++;
    delay(250);
    }

  // checks button buttonPress integer value and sets WS2812B LED RGB value and brightness
  checkValue = buttonPresses;

  switch (checkValue) {
    case 1: // OFF
      // sets the LEDs to the "off" state by zeroizing all values (default)
      redValue = 0;     // red value for LEDs (CRGB)
      greenValue = 0;   // green value for LEDs (CRGB)
      blueValue = 0;    // blue value for LEDs (CRGB)
      // sets the LEDs to the "off" state of min brightness (0)
      brightness = 0;
      break;
    case 2: // RED
      // sets the LEDs to the color value of RED
      redValue = 255;   // red value for LEDs (CRGB)
      greenValue = 0;   // green value for LEDs (CRGB)
      blueValue = 0;    // blue value for LEDs (CRGB)
      // sets the LEDs to the "on" state of max brightness (255)
      brightness = 255;
      break;
    case 3: // GOLD
      // sets the LEDs to the color value of GOLD
      redValue = 255;   // red value for LEDs (CRGB)
      greenValue = 215; // green value for LEDs (CRGB)
      blueValue = 0;    // blue value for LEDs (CRGB)
      // sets the LEDs to the "on" state of max brightness (255)
      brightness = 255;
      break;
    case 4: // PURPLE
      // sets the LEDs to the color value of PURPLE
      redValue = 128;    // red value for LEDs (CRGB)
      greenValue = 0;   // green value for LEDs (CRGB)
      blueValue = 128;  // blue value for LEDs (CRGB)
      // sets the LEDs to the "on" state of max brightness (255)
      brightness = 255;
      break;
    case 5: // CYAN
      // sets the LEDs to the color value of CYAN
      redValue = 0;     // red value for LEDs (CRGB)
      greenValue = 255;   // green value for LEDs (CRGB)
      blueValue = 255;  // blue value for LEDs (CRGB)
      // sets the LEDs to the "on" state of max brightness (255)
      brightness = 255;
      break;     
    default: // RESET TO OFF
      // sets the buttonPresses variable to default value of 1 (off)
      buttonPresses = 1;
      break;
  }

  for (int i = 0; i <= ledCount; i++) {
    leds[i] = CRGB(redValue, greenValue, blueValue); // set LED RGB color value (0-255)
    FastLED.setBrightness(brightness); // set brightness value (0-255)
    FastLED.show();
  }
}
